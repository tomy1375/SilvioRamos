---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { getPlanos } from '../../lib/db.js';

// Obtener los planos de la base de datos
let planos = [];
try {
  const result = await getPlanos();
  planos = result;
} catch (error) {
  console.error("Error al obtener planos:", error);
}
---

<AdminLayout title="Gestión de Planos" activeLink="planos">
<div class="flex flex-col gap-6">
  <div class="flex items-center justify-between">
    <div class="flex flex-col gap-2">
      <h1 class="text-2xl font-bold tracking-tight">Gestión de Planos</h1>
      <p class="text-muted-foreground">
        Administre los planos disponibles para los clientes.
      </p>
    </div>
    <a href="/admin/subir" class="inline-flex h-10 items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground shadow transition-colors hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2 h-4 w-4">
        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
        <polyline points="17 8 12 3 7 8"></polyline>
        <line x1="12" y1="3" x2="12" y2="15"></line>
      </svg>
      Subir Plano
    </a>
  </div>
  <div class="rounded-lg border shadow-sm">
    <div class="p-4">
      {planos.length === 0 ? (
        <div class="text-center py-8">
          <p class="text-muted-foreground">No hay planos disponibles. Sube tu primer plano.</p>
        </div>
      ) : (
        <div class="relative w-full overflow-auto">
          <table class="w-full caption-bottom text-sm">
            <thead class="[&_tr]:border-b">
              <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">Nombre</th>
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">Cliente</th>
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">Tipo</th>
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">Fecha Subida</th>
                <th class="h-12 px-4 text-left align-middle font-medium text-muted-foreground">Acciones</th>
              </tr>
            </thead>
            <tbody class="[&_tr:last-child]:border-0">
              {planos.map((plano) => (
                <tr class="border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted">
                  <td class="p-4 align-middle">{plano.nombre}</td>
                  <td class="p-4 align-middle">{plano.cliente_nombre || `ID: ${plano.usuario_id}`}</td>
                  <td class="p-4 align-middle">{plano.tipo}</td>
                  <td class="p-4 align-middle">{new Date(plano.fecha_subida).toLocaleDateString()}</td>
                  <td class="p-4 align-middle">
                    <div class="flex gap-2">
                      <a 
                        href={plano.archivo_url} 
                        target="_blank" 
                        class="inline-flex h-9 items-center justify-center rounded-md border border-input bg-background px-3 py-2 text-sm font-medium shadow-sm transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50"
                      >
                        Ver
                      </a>
                      <a 
                        href={`/admin/editar-plano/${plano.id}`}
                        class="inline-flex h-9 items-center justify-center rounded-md border border-input bg-background px-3 py-2 text-sm font-medium shadow-sm transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50"
                      >
                        Editar
                      </a>
                      <button 
                        class="eliminar-plano inline-flex h-9 items-center justify-center rounded-md bg-destructive px-3 py-2 text-sm font-medium text-destructive-foreground shadow-sm hover:bg-destructive/90"
                        data-id={plano.id}
                        data-nombre={plano.nombre}
                      >
                        Eliminar
                      </button>
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  </div>
</div>

<!-- Modal de confirmación para eliminar -->
<div id="eliminarModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-lg p-6 w-full max-w-md">
    <h3 class="text-lg font-bold mb-4">Confirmar eliminación</h3>
    <p id="eliminarMensaje" class="mb-6">¿Está seguro de que desea eliminar este plano?</p>
    <div class="flex justify-end gap-4">
      <button id="cancelarEliminar" class="inline-flex h-9 items-center justify-center rounded-md border border-input bg-background px-3 py-2 text-sm font-medium shadow-sm transition-colors hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50">
        Cancelar
      </button>
      <button id="confirmarEliminar" class="inline-flex h-9 items-center justify-center rounded-md bg-destructive px-3 py-2 text-sm font-medium text-destructive-foreground shadow-sm hover:bg-destructive/90">
        Eliminar
      </button>
    </div>
  </div>
</div>
</AdminLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const eliminarBotones = document.querySelectorAll('.eliminar-plano');
    const eliminarModal = document.getElementById('eliminarModal');
    const eliminarMensaje = document.getElementById('eliminarMensaje');
    const cancelarEliminar = document.getElementById('cancelarEliminar');
    const confirmarEliminar = document.getElementById('confirmarEliminar');
    
    let planoIdAEliminar = null;
    
    // Mostrar modal de confirmación al hacer clic en "Eliminar"
    eliminarBotones.forEach(boton => {
      boton.addEventListener('click', () => {
        planoIdAEliminar = boton.dataset.id;
        const planoNombre = boton.dataset.nombre;
        eliminarMensaje.textContent = `¿Está seguro de que desea eliminar el plano "${planoNombre}"?`;
        eliminarModal.classList.remove('hidden');
      });
    });
    
    // Cerrar modal al hacer clic en "Cancelar"
    cancelarEliminar.addEventListener('click', () => {
      eliminarModal.classList.add('hidden');
      planoIdAEliminar = null;
    });
    
    // Eliminar plano al confirmar
    confirmarEliminar.addEventListener('click', async () => {
      if (planoIdAEliminar) {
        try {
          const response = await fetch('/api/eliminar-plano', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id: planoIdAEliminar }),
          });
          
          const data = await response.json();
          
          if (response.ok) {
            // Recargar la página para mostrar la lista actualizada
            window.location.reload();
          } else {
            alert(`Error: ${data.error || 'No se pudo eliminar el plano'}`);
            eliminarModal.classList.add('hidden');
          }
        } catch (error) {
          console.error('Error al eliminar el plano:', error);
          alert('Error al eliminar el plano. Por favor, inténtelo de nuevo.');
          eliminarModal.classList.add('hidden');
        }
      }
    });
    
    // Cerrar modal al hacer clic fuera de él
    eliminarModal.addEventListener('click', (e) => {
      if (e.target === eliminarModal) {
        eliminarModal.classList.add('hidden');
        planoIdAEliminar = null;
      }
    });
  });
</script>

