---
// Importar pg correctamente como módulo CommonJS
import pkg from 'pg';
const { Pool } = pkg;

import { login } from '../lib/auth.js';
import Layout from '../layouts/Layout.astro';
import TransitionLoader from '../components/TransitionLoader';

// Configuración de la conexión a PostgreSQL
const pool = new Pool({
 user: import.meta.env.DB_USER || "",
 host: import.meta.env.DB_HOST || "",
 database: import.meta.env.DB_NAME || "",
 password: String(import.meta.env.DB_PASSWORD || ""),
 port: Number.parseInt(import.meta.env.DB_PORT || "5432"),
 ssl: import.meta.env.NODE_ENV === "production" ? { rejectUnauthorized: false } : false,
});

// Cambiar la declaración de redirectUrl para aceptar undefined
let error = null;
let redirectUrl: string | undefined = '';

// Procesar el formulario de inicio de sesión
if (Astro.request.method === 'POST') {
 try {
   const formData = await Astro.request.formData();
   const email = formData.get('email');
   const password = formData.get('password');
   
   if (!email || !password) {
     error = "Por favor, complete todos los campos";
   } else {
     const result = await login(email.toString(), password.toString(), pool);
     
     // Más abajo, donde se asigna redirectUrl, asegurarnos de que no sea undefined
     if (result.success) {
       // Crear cookie de sesión
       const sessionData = JSON.stringify(result.usuario);
       const cookieOptions = "Path=/; HttpOnly; SameSite=Strict; Max-Age=86400"; // 24 horas
       
       // Usar un valor predeterminado si redirect es undefined
       redirectUrl = result.redirect || '/cliente';
       
       // Establecer la cookie y redirigir usando JavaScript
       return new Response(
         `<html>
    <head>
      <meta http-equiv="refresh" content="0;url=${redirectUrl}">
      <script>
        // Establecer el mensaje para el TransitionLoader
        sessionStorage.setItem('navigationAction', 'login');
        sessionStorage.setItem('navigationTarget', '${redirectUrl}');
        
        // Aplicar el tema oscuro inmediatamente si es necesario
        (function() {
          const savedTheme = localStorage.getItem('theme');
          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
          
          if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
            document.documentElement.classList.add('dark');
            document.documentElement.style.colorScheme = 'dark';
            document.documentElement.style.backgroundColor = '#1a1a1a';
          }
        })();
        
        // Mostrar el loader con mensaje específico
        document.addEventListener('DOMContentLoaded', function() {
          const event = new CustomEvent('showLoader', { 
            detail: { message: 'Iniciando sesión...' } 
          });
          document.dispatchEvent(event);
        });
      </script>
    </head>
    <body style="visibility: hidden; background-color: #1a1a1a;">
      <div id="loader" style="position: fixed; inset: 0; z-index: 50; display: flex; align-items: center; justify-content: center; background-color: rgba(17, 24, 39, 0.9); visibility: visible;">
        <div style="text-align: center;">
          <div style="display: inline-block; width: 3rem; height: 3rem; border-radius: 9999px; border: 4px solid; border-color: #0284c7; border-top-color: transparent; animation: spin 1s linear infinite;"></div>
          <p style="margin-top: 1rem; font-size: 1.125rem; font-weight: 500; color: white;">Iniciando sesión...</p>
        </div>
      </div>
      <style>
        @keyframes spin {
          to { transform: rotate(360deg); }
        }
      </style>
    </body>
  </html>`,
         {
           status: 200,
           headers: {
             'Content-Type': 'text/html',
             'Set-Cookie': `session=${encodeURIComponent(sessionData)}; ${cookieOptions}`
           }
         }
       );
     } else {
       error = result.error;
     }
   }
 } catch (err) {
   console.error("Error en el inicio de sesión:", err);
   error = "Error al procesar la solicitud. Por favor, inténtelo de nuevo.";
 }
}
---

<Layout title="Acceso Clientes">
  <!-- Incluir el TransitionLoader aquí para asegurarnos de que esté disponible -->
  <TransitionLoader client:load />
  
  <main id="login-container" class="min-h-screen flex items-center justify-center py-12">
    <div id="login-box" class="backdrop-blur-sm shadow-xl rounded-2xl p-12 max-w-md w-full space-y-8">
      <div class="text-center space-y-4">
        <h1 id="login-title" class="text-4xl font-bold tracking-tight mb-4 mt-16 md:mt-0">Acceso Clientes</h1>
        <p id="login-subtitle" class="text-lg">
          Ingrese sus credenciales para acceder a su cuenta
        </p>
      </div>
      
      {error && (
        <div class="bg-destructive/15 text-destructive p-4 rounded-md mb-4">
          <p>{error}</p>
        </div>
      )}
      
      <form id="loginForm" method="POST" class="space-y-6">
        <div class="space-y-2">
          <label for="email" class="block text-sm font-medium">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
            placeholder="correo@ejemplo.com"
          />
        </div>
        
        <div class="space-y-2">
          <label for="password" class="block text-sm font-medium">Contraseña</label>
          <input
            type="password"
            id="password"
            name="password"
            required
            class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50"
            placeholder="••••••••"
          />
        </div>
        
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <input
              id="remember-me"
              name="remember-me"
              type="checkbox"
              class="h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary transition-all"
            />
            <label for="remember-me" class="ml-2 block text-sm ">
              Recordarme
            </label>
          </div>
          
          <div class="text-sm">
            <a href="#" class="font-medium text-primary hover:text-primary/80 transition-colors">
              ¿Olvidó su contraseña?
            </a>
          </div>
        </div>
        
        <button
          type="submit"
          id="submitBtn"
          class="inline-flex h-10 w-full items-center justify-center rounded-md bg-primary px-4 py-2 text-sm font-medium text-primary-foreground shadow transition-colors hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50"
        >
          Iniciar Sesión
        </button>
      </form>
    </div>
  </main>
</Layout>

<script>
  // Función para actualizar los estilos según el tema
  function updateLoginStyles() {
    const isDark = document.documentElement.classList.contains('dark');
    const container = document.getElementById('login-container');
    const box = document.getElementById('login-box');
    const title = document.getElementById('login-title');
    const subtitle = document.getElementById('login-subtitle');
    
    if (container) {
  container.style.background = isDark 
    ? 'hsl(var(--background))'
    : 'linear-gradient(to bottom right, rgb(239, 246, 255), rgb(219, 234, 254))';
}
    
    if (box) {
      box.style.backgroundColor = isDark 
        ? 'rgba(31, 41, 55, 0.95)' 
        : 'rgba(255, 255, 255, 0.95)';
    }
    
    if (title) {
      title.style.color = isDark ? 'white' : 'rgb(17, 24, 39)';
    }
    
    if (subtitle) {
      subtitle.style.color = isDark ? 'rgb(209, 213, 219)' : 'rgb(75, 85, 99)';
    }
  }
  
  // Ejecutar al cargar la página
  document.addEventListener('DOMContentLoaded', () => {
    updateLoginStyles();
    
    // Configurar el formulario de inicio de sesión
    const loginForm = document.getElementById('loginForm');
    const submitBtn = document.getElementById('submitBtn');
    
    if (loginForm && submitBtn) {
      loginForm.addEventListener('submit', (e) => {
        // No prevenimos el envío del formulario, pero configuramos el mensaje
        
        // Establecer el mensaje para TransitionLoader
        sessionStorage.setItem('navigationAction', 'login');
        
        // Mostrar manualmente el loader con un mensaje específico
        const event = new CustomEvent('showLoader', { 
          detail: { message: 'Iniciando sesión...' } 
        });
        document.dispatchEvent(event);
        
        console.log("Evento showLoader disparado con mensaje: Iniciando sesión...");
        
        // Ocultar cualquier texto que pueda aparecer durante la redirección
        document.body.style.visibility = 'hidden';
        const loaderElement = document.querySelector('.fixed');
        if (loaderElement && loaderElement instanceof HTMLElement) {
          loaderElement.style.visibility = 'visible'; // Mantener visible solo el loader
        }
      });
    }
  });
  
  // Observar cambios en la clase 'dark' del elemento html
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.attributeName === 'class') {
        updateLoginStyles();
      }
    });
  });
  
  observer.observe(document.documentElement, { attributes: true });
  
  // También ejecutar cuando se navega entre páginas con ViewTransitions
  document.addEventListener('astro:page-load', updateLoginStyles);
</script>

<style>
  /* Estilos base que serán sobrescritos por JavaScript */
  #login-container {
    transition: background 0.3s ease;
  }
  
  #login-box {
    transition: background-color 0.3s ease;
  }
  
  #login-title, #login-subtitle {
    transition: color 0.3s ease;
  }
</style>

